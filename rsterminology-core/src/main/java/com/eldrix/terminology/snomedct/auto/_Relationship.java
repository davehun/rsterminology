package com.eldrix.terminology.snomedct.auto;

import java.util.Date;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.eldrix.terminology.snomedct.Concept;

/**
 * Class _Relationship was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Relationship extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String RELATIONSHIP_ID_PK_COLUMN = "relationship_id";

    public static final Property<Integer> CHARACTERISTIC_TYPE = new Property<Integer>("characteristicType");
    public static final Property<Date> DATE_UPDATED = new Property<Date>("dateUpdated");
    public static final Property<Integer> REFINABILITY = new Property<Integer>("refinability");
    public static final Property<String> RELATIONSHIP_GROUP = new Property<String>("relationshipGroup");
    public static final Property<Long> RELATIONSHIP_ID = new Property<Long>("relationshipId");
    public static final Property<Long> RELATIONSHIP_TYPE_CONCEPT_ID = new Property<Long>("relationshipTypeConceptId");
    public static final Property<Long> SOURCE_CONCEPT_ID = new Property<Long>("sourceConceptId");
    public static final Property<Long> TARGET_CONCEPT_ID = new Property<Long>("targetConceptId");
    public static final Property<Concept> RELATIONSHIP_TYPE_CONCEPT = new Property<Concept>("relationshipTypeConcept");
    public static final Property<Concept> SOURCE_CONCEPT = new Property<Concept>("sourceConcept");
    public static final Property<Concept> TARGET_CONCEPT = new Property<Concept>("targetConcept");

    public void setCharacteristicType(Integer characteristicType) {
        writeProperty("characteristicType", characteristicType);
    }
    public Integer getCharacteristicType() {
        return (Integer)readProperty("characteristicType");
    }

    public void setDateUpdated(Date dateUpdated) {
        writeProperty("dateUpdated", dateUpdated);
    }
    public Date getDateUpdated() {
        return (Date)readProperty("dateUpdated");
    }

    public void setRefinability(Integer refinability) {
        writeProperty("refinability", refinability);
    }
    public Integer getRefinability() {
        return (Integer)readProperty("refinability");
    }

    public void setRelationshipGroup(String relationshipGroup) {
        writeProperty("relationshipGroup", relationshipGroup);
    }
    public String getRelationshipGroup() {
        return (String)readProperty("relationshipGroup");
    }

    public void setRelationshipId(Long relationshipId) {
        writeProperty("relationshipId", relationshipId);
    }
    public Long getRelationshipId() {
        return (Long)readProperty("relationshipId");
    }

    public void setRelationshipTypeConceptId(Long relationshipTypeConceptId) {
        writeProperty("relationshipTypeConceptId", relationshipTypeConceptId);
    }
    public Long getRelationshipTypeConceptId() {
        return (Long)readProperty("relationshipTypeConceptId");
    }

    public void setSourceConceptId(Long sourceConceptId) {
        writeProperty("sourceConceptId", sourceConceptId);
    }
    public Long getSourceConceptId() {
        return (Long)readProperty("sourceConceptId");
    }

    public void setTargetConceptId(Long targetConceptId) {
        writeProperty("targetConceptId", targetConceptId);
    }
    public Long getTargetConceptId() {
        return (Long)readProperty("targetConceptId");
    }

    public void setRelationshipTypeConcept(Concept relationshipTypeConcept) {
        setToOneTarget("relationshipTypeConcept", relationshipTypeConcept, true);
    }

    public Concept getRelationshipTypeConcept() {
        return (Concept)readProperty("relationshipTypeConcept");
    }


    public void setSourceConcept(Concept sourceConcept) {
        setToOneTarget("sourceConcept", sourceConcept, true);
    }

    public Concept getSourceConcept() {
        return (Concept)readProperty("sourceConcept");
    }


    public void setTargetConcept(Concept targetConcept) {
        setToOneTarget("targetConcept", targetConcept, true);
    }

    public Concept getTargetConcept() {
        return (Concept)readProperty("targetConcept");
    }


}
